public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if (s.length() == 0 || s.length() == 1){
            return s.length();
        }
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        for (char c : s.toCharArray()){
            map.put(c, 0);
        }
        int start = 0, end = 0, maxLen = Integer.MIN_VALUE, counter = 0;
        while (end < s.length()){
            char c1 = s.charAt(end);
            if (map.get(c1) == 0){
                counter ++;
            }
            map.put(c1, map.get(c1) + 1);
            end ++;
            while (counter > 2){
                char c2 = s.charAt(start);
                map.put(c2, map.get(c2) - 1);
                if (map.get(c2) == 0){
                    counter --;
                }
                start ++;
            }
        maxLen = Math.max(maxLen, end - start);
        }
        return maxLen;
    }
}
