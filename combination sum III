public class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        backtrack(result, list, k, 1, n);
        return result;
    }
    public void backtrack(List<List<Integer>> result, List<Integer> list, int k, int start, int remain)
    {
        if (list.size()>k) return;
        if (list.size()==k&&remain==0)
            result.add(new ArrayList<>(list));
        for (int i=start; i<=9; i++)
        {
            list.add(i);
            backtrack(result, list, k, i+1, remain-i);
            list.remove(list.size()-1);
        }
        
    }
}
