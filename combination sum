public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        backtrack(result, list, candidates, target, 0);
        return result;
    }
    public void backtrack(List<List<Integer>> result, List<Integer> list, int[] candidates, int remain, int start)
    {
        if (remain== 0)
        result.add(new ArrayList<>(list));
        if (remain<0)
        return;
        for (int i =start; i< candidates.length;i++){
            list.add(candidates[i]);
            backtrack(result, list, candidates, remain-candidates[i],i);
            list.remove(list.size()-1);
        }
    }
}
